#! /usr/bin/env node

var args = require( "argsparser" ).parse();
var fs = require('fs');
var path = require('path');
var fsutil = require('./util/fileutils');

var jsp = require("uglify-js").parser;
var pro = require("uglify-js").uglify;

var version = JSON.parse(fs.readFileSync("./package.json","utf8")).version;


// defaults
var defaultProfile = "core";
var minify = false;
var docs = false;
var extra = false;

var profiles = require("./util/profiles/profiles");

for(arg in args) {
  switch(arg) {
    case  "--help":
    case  "-?":
    case  "-h": showUsage();
    break;
    case "--profile": defaultProfile = args[arg];
  }
}

function showUsage() {
  
  var usage = '';
  usage += "\nXUI Version " + version;
  usage += "\n\nusage: ./build [ --profile <name> ] [ --minify ] [ --generate-docs ]";
  usage += "\nsupported profiles are:";
  for (var profile in profiles) {
    usage += "\n    - " + profile;
  }
  
  usage += "\nIf no profile is selected, '"+ defaultProfile +"' will be used\n\n";
  console.log(usage) 
  process.exit(1); 
}


function build() {
  console.log("\nBuilding XUI with profile '%s'.\n", defaultProfile)

  //  clear previous file
  var target = path.resolve(profiles[defaultProfile]['out'] + "-" + version + ".js");  
  var targetMin = path.resolve(profiles[defaultProfile]['out'] + "-" + version + "-min.js");    
  var targetDir = path.resolve(path.dirname(target));

  fsutil.rmSync(targetDir);
  fs.mkdirSync(targetDir,"0775");  
  var content = profiles[defaultProfile]["include"].map(function(library){
    return fs.readFileSync(library + '.js', 'utf8');
  })

  content = content.join('');
  fs.writeFileSync(target, content, 'utf8')

  console.log("Built XUI %s", target)
  
  // Minify Version
  var ast = jsp.parse(content);
  ast = pro.ast_mangle(ast);
  ast = pro.ast_squeeze(ast);
  var final_code = pro.gen_code(ast);
  fs.writeFileSync(targetMin, final_code, 'utf8')  
  
  console.log("Built XUI %s\n", targetMin)
}


// MAIN ---
build()